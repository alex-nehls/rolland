target-version = "py312" # Python version in your project
exclude = ["demo", "docs"]

line-length = 120

[lint]
select = [
        "F", # pyflakes
        "C","E","R", "W",  # pylint (including pycodestyle)
        "C90", "I", "N","D", "UP",
        "YTT", "ASYNC", "ASYNC1", "BLE", "B", "A", "COM", # flake8 plugins
        "C4", "DTZ","T10","EM", "FA", "ISC", "ICN", # flake8 plugins
        "LOG", "G", "INP", "PIE", "T20", "PYI", "PT", "RSE", # flake8 plugins
        "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "TD", "FIX", # flake8 plugins
        "C901" # others
        ]

ignore = [
    "F811", # redefinition of unused '...'
    "ARG002", # Argument name "..." doesn't match the function signature
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[lint.pycodestyle]
ignore-overlong-task-comments = true
max-doc-length = 100

[lint.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257".

[format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

